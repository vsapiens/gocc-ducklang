// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			shift(2), // program
			nil,      // id
			nil,      // :
			nil,      // var
			nil,      // ;
			nil,      // intTyp
			nil,      // floatTyp
			nil,      // ,
			nil,      // {
			nil,      // }
			nil,      // empty
			nil,      // =
			nil,      // relop
			nil,      // print
			nil,      // (
			nil,      // )
			nil,      // +
			nil,      // -
			nil,      // *
			nil,      // /
			nil,      // cteI
			nil,      // cteF
			nil,      // if
			nil,      // else
			nil,      // cteS
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // $
			nil,          // program
			nil,          // id
			nil,          // :
			nil,          // var
			nil,          // ;
			nil,          // intTyp
			nil,          // floatTyp
			nil,          // ,
			nil,          // {
			nil,          // }
			nil,          // empty
			nil,          // =
			nil,          // relop
			nil,          // print
			nil,          // (
			nil,          // )
			nil,          // +
			nil,          // -
			nil,          // *
			nil,          // /
			nil,          // cteI
			nil,          // cteF
			nil,          // if
			nil,          // else
			nil,          // cteS
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // program
			shift(3), // id
			nil,      // :
			nil,      // var
			nil,      // ;
			nil,      // intTyp
			nil,      // floatTyp
			nil,      // ,
			nil,      // {
			nil,      // }
			nil,      // empty
			nil,      // =
			nil,      // relop
			nil,      // print
			nil,      // (
			nil,      // )
			nil,      // +
			nil,      // -
			nil,      // *
			nil,      // /
			nil,      // cteI
			nil,      // cteF
			nil,      // if
			nil,      // else
			nil,      // cteS
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // program
			nil,      // id
			shift(4), // :
			nil,      // var
			nil,      // ;
			nil,      // intTyp
			nil,      // floatTyp
			nil,      // ,
			nil,      // {
			nil,      // }
			nil,      // empty
			nil,      // =
			nil,      // relop
			nil,      // print
			nil,      // (
			nil,      // )
			nil,      // +
			nil,      // -
			nil,      // *
			nil,      // /
			nil,      // cteI
			nil,      // cteF
			nil,      // if
			nil,      // else
			nil,      // cteS
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // program
			nil,      // id
			nil,      // :
			shift(7), // var
			nil,      // ;
			nil,      // intTyp
			nil,      // floatTyp
			nil,      // ,
			shift(8), // {
			nil,      // }
			nil,      // empty
			nil,      // =
			nil,      // relop
			nil,      // print
			nil,      // (
			nil,      // )
			nil,      // +
			nil,      // -
			nil,      // *
			nil,      // /
			nil,      // cteI
			nil,      // cteF
			nil,      // if
			nil,      // else
			nil,      // cteS
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // program
			nil,      // id
			nil,      // :
			nil,      // var
			nil,      // ;
			nil,      // intTyp
			nil,      // floatTyp
			nil,      // ,
			shift(8), // {
			nil,      // }
			nil,      // empty
			nil,      // =
			nil,      // relop
			nil,      // print
			nil,      // (
			nil,      // )
			nil,      // +
			nil,      // -
			nil,      // *
			nil,      // /
			nil,      // cteI
			nil,      // cteF
			nil,      // if
			nil,      // else
			nil,      // cteS
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(2), // $, reduce: Programa
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(10), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(13),  // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			reduce(13), // }, reduce: Estatutos
			nil,        // empty
			nil,        // =
			nil,        // relop
			shift(19),  // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			shift(20),  // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // $, reduce: Programa
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			reduce(9), // :, reduce: Ids
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			shift(21), // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			reduce(3), // {, reduce: Vars
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			shift(22), // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			shift(23), // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			shift(24), // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(13),  // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			reduce(12), // }, reduce: Estatutos
			nil,        // empty
			nil,        // =
			nil,        // relop
			shift(19),  // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			shift(20),  // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(14), // id, reduce: Estatuto
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			reduce(14), // }, reduce: Estatuto
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(14), // print, reduce: Estatuto
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(14), // if, reduce: Estatuto
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(15), // id, reduce: Estatuto
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			reduce(15), // }, reduce: Estatuto
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(15), // print, reduce: Estatuto
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(15), // if, reduce: Estatuto
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(16), // id, reduce: Estatuto
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			reduce(16), // }, reduce: Estatuto
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(16), // print, reduce: Estatuto
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(16), // if, reduce: Estatuto
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(26), // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(27), // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(10), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			shift(30), // intTyp
			shift(31), // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(10), // $, reduce: Bloque
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			reduce(11), // }, reduce: Estatutos
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(43), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(46), // (
			nil,       // )
			shift(49), // +
			shift(50), // -
			nil,       // *
			nil,       // /
			shift(53), // cteI
			shift(54), // cteF
			nil,       // if
			nil,       // else
			shift(55), // cteS
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			reduce(8), // :, reduce: Ids
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			shift(67), // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			reduce(6), // ;, reduce: Tipo
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			reduce(7), // ;, reduce: Tipo
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(31), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(31), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(31), // +, reduce: Varcte
			reduce(31), // -, reduce: Varcte
			reduce(31), // *, reduce: Varcte
			reduce(31), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			shift(68), // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(18), // ;, reduce: Expresion
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			shift(69),  // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(21), // ;, reduce: Exp
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(21), // relop, reduce: Exp
			nil,        // print
			nil,        // (
			nil,        // )
			shift(71),  // +
			shift(72),  // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(24), // ;, reduce: Termino
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(24), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(24), // +, reduce: Termino
			reduce(24), // -, reduce: Termino
			shift(75),  // *
			shift(76),  // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(30), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(30), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(30), // +, reduce: Factor
			reduce(30), // -, reduce: Factor
			reduce(30), // *, reduce: Factor
			reduce(30), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(32), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(32), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(32), // +, reduce: Varcte
			reduce(32), // -, reduce: Varcte
			reduce(32), // *, reduce: Varcte
			reduce(32), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(33), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(33), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(33), // +, reduce: Varcte
			reduce(33), // -, reduce: Varcte
			reduce(33), // *, reduce: Varcte
			reduce(33), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(31), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(31), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Varcte
			reduce(31), // +, reduce: Varcte
			reduce(31), // -, reduce: Varcte
			reduce(31), // *, reduce: Varcte
			reduce(31), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			shift(77),  // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(38), // ), reduce: Expresiones
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(18), // ,, reduce: Expresion
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			shift(78),  // relop
			nil,        // print
			nil,        // (
			reduce(18), // ), reduce: Expresion
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			shift(80), // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(21), // ,, reduce: Exp
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(21), // relop, reduce: Exp
			nil,        // print
			nil,        // (
			reduce(21), // ), reduce: Exp
			shift(81),  // +
			shift(82),  // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(43), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(53), // cteI
			shift(54), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(43), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(53), // cteI
			shift(54), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S51
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(24), // ,, reduce: Termino
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(24), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			reduce(24), // ), reduce: Termino
			reduce(24), // +, reduce: Termino
			reduce(24), // -, reduce: Termino
			shift(85),  // *
			shift(86),  // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S52
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(30), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(30), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Factor
			reduce(30), // +, reduce: Factor
			reduce(30), // -, reduce: Factor
			reduce(30), // *, reduce: Factor
			reduce(30), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S53
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(32), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(32), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Varcte
			reduce(32), // +, reduce: Varcte
			reduce(32), // -, reduce: Varcte
			reduce(32), // *, reduce: Varcte
			reduce(32), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S54
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(33), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(33), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Varcte
			reduce(33), // +, reduce: Varcte
			reduce(33), // -, reduce: Varcte
			reduce(33), // *, reduce: Varcte
			reduce(33), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S55
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			shift(87),  // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(39), // ), reduce: Expresiones
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S56
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(31), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Varcte
			reduce(31), // +, reduce: Varcte
			reduce(31), // -, reduce: Varcte
			reduce(31), // *, reduce: Varcte
			reduce(31), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S57
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			shift(88), // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S58
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			shift(89),  // relop
			nil,        // print
			nil,        // (
			reduce(18), // ), reduce: Expresion
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S59
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S60
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(21), // relop, reduce: Exp
			nil,        // print
			nil,        // (
			reduce(21), // ), reduce: Exp
			shift(91),  // +
			shift(92),  // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S61
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S62
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S63
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(24), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			reduce(24), // ), reduce: Termino
			reduce(24), // +, reduce: Termino
			reduce(24), // -, reduce: Termino
			shift(95),  // *
			shift(96),  // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S64
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(30), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Factor
			reduce(30), // +, reduce: Factor
			reduce(30), // -, reduce: Factor
			reduce(30), // *, reduce: Factor
			reduce(30), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S65
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(32), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Varcte
			reduce(32), // +, reduce: Varcte
			reduce(32), // -, reduce: Varcte
			reduce(32), // *, reduce: Varcte
			reduce(32), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S66
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(33), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Varcte
			reduce(33), // +, reduce: Varcte
			reduce(33), // -, reduce: Varcte
			reduce(33), // *, reduce: Varcte
			reduce(33), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S67
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(10), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			reduce(5), // {, reduce: Args
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S68
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(17), // id, reduce: Asignacion
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			reduce(17), // }, reduce: Asignacion
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(17), // print, reduce: Asignacion
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(17), // if, reduce: Asignacion
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S69
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(98),  // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(100), // (
			nil,        // )
			shift(102), // +
			shift(103), // -
			nil,        // *
			nil,        // /
			shift(106), // cteI
			shift(107), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S70
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(108), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S71
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(109), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(110), // (
			nil,        // )
			shift(112), // +
			shift(113), // -
			nil,        // *
			nil,        // /
			shift(116), // cteI
			shift(117), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S72
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(109), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(110), // (
			nil,        // )
			shift(112), // +
			shift(113), // -
			nil,        // *
			nil,        // /
			shift(116), // cteI
			shift(117), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S73
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(29), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(29), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(29), // +, reduce: Factor
			reduce(29), // -, reduce: Factor
			reduce(29), // *, reduce: Factor
			reduce(29), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S74
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(28), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(28), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(28), // +, reduce: Factor
			reduce(28), // -, reduce: Factor
			reduce(28), // *, reduce: Factor
			reduce(28), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S75
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(119), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(120), // (
			nil,        // )
			shift(121), // +
			shift(122), // -
			nil,        // *
			nil,        // /
			shift(125), // cteI
			shift(126), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S76
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(119), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(120), // (
			nil,        // )
			shift(121), // +
			shift(122), // -
			nil,        // *
			nil,        // /
			shift(125), // cteI
			shift(126), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S77
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(43), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(46), // (
			nil,       // )
			shift(49), // +
			shift(50), // -
			nil,       // *
			nil,       // /
			shift(53), // cteI
			shift(54), // cteF
			nil,       // if
			nil,       // else
			shift(55), // cteS
		},
	},
	actionRow{ // S78
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(129), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(131), // (
			nil,        // )
			shift(133), // +
			shift(134), // -
			nil,        // *
			nil,        // /
			shift(137), // cteI
			shift(138), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S79
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(139), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S80
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			shift(140), // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S81
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(141), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(142), // (
			nil,        // )
			shift(144), // +
			shift(145), // -
			nil,        // *
			nil,        // /
			shift(148), // cteI
			shift(149), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S82
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(141), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(142), // (
			nil,        // )
			shift(144), // +
			shift(145), // -
			nil,        // *
			nil,        // /
			shift(148), // cteI
			shift(149), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S83
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(29), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(29), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Factor
			reduce(29), // +, reduce: Factor
			reduce(29), // -, reduce: Factor
			reduce(29), // *, reduce: Factor
			reduce(29), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S84
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(28), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(28), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Factor
			reduce(28), // +, reduce: Factor
			reduce(28), // -, reduce: Factor
			reduce(28), // *, reduce: Factor
			reduce(28), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S85
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(151), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(152), // (
			nil,        // )
			shift(153), // +
			shift(154), // -
			nil,        // *
			nil,        // /
			shift(157), // cteI
			shift(158), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S86
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(151), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(152), // (
			nil,        // )
			shift(153), // +
			shift(154), // -
			nil,        // *
			nil,        // /
			shift(157), // cteI
			shift(158), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S87
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(43), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(46), // (
			nil,       // )
			shift(49), // +
			shift(50), // -
			nil,       // *
			nil,       // /
			shift(53), // cteI
			shift(54), // cteF
			nil,       // if
			nil,       // else
			shift(55), // cteS
		},
	},
	actionRow{ // S88
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			shift(162), // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S89
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(163), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(165), // (
			nil,        // )
			shift(167), // +
			shift(168), // -
			nil,        // *
			nil,        // /
			shift(171), // cteI
			shift(172), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S90
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(173), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S91
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(174), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(175), // (
			nil,        // )
			shift(177), // +
			shift(178), // -
			nil,        // *
			nil,        // /
			shift(181), // cteI
			shift(182), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S92
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(174), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(175), // (
			nil,        // )
			shift(177), // +
			shift(178), // -
			nil,        // *
			nil,        // /
			shift(181), // cteI
			shift(182), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S93
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(29), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Factor
			reduce(29), // +, reduce: Factor
			reduce(29), // -, reduce: Factor
			reduce(29), // *, reduce: Factor
			reduce(29), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S94
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(28), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Factor
			reduce(28), // +, reduce: Factor
			reduce(28), // -, reduce: Factor
			reduce(28), // *, reduce: Factor
			reduce(28), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S95
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(184), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(185), // (
			nil,        // )
			shift(186), // +
			shift(187), // -
			nil,        // *
			nil,        // /
			shift(190), // cteI
			shift(191), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S96
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(184), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(185), // (
			nil,        // )
			shift(186), // +
			shift(187), // -
			nil,        // *
			nil,        // /
			shift(190), // cteI
			shift(191), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S97
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			reduce(4), // {, reduce: Args
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S98
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(31), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(31), // +, reduce: Varcte
			reduce(31), // -, reduce: Varcte
			reduce(31), // *, reduce: Varcte
			reduce(31), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S99
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(19), // ;, reduce: Expresion
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S100
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S101
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(21), // ;, reduce: Exp
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			shift(194), // +
			shift(195), // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S102
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(98),  // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(106), // cteI
			shift(107), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S103
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(98),  // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(106), // cteI
			shift(107), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S104
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(24), // ;, reduce: Termino
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(24), // +, reduce: Termino
			reduce(24), // -, reduce: Termino
			shift(198), // *
			shift(199), // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S105
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(30), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(30), // +, reduce: Factor
			reduce(30), // -, reduce: Factor
			reduce(30), // *, reduce: Factor
			reduce(30), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S106
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(32), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(32), // +, reduce: Varcte
			reduce(32), // -, reduce: Varcte
			reduce(32), // *, reduce: Varcte
			reduce(32), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S107
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(33), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(33), // +, reduce: Varcte
			reduce(33), // -, reduce: Varcte
			reduce(33), // *, reduce: Varcte
			reduce(33), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S108
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(27), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(27), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(27), // +, reduce: Factor
			reduce(27), // -, reduce: Factor
			reduce(27), // *, reduce: Factor
			reduce(27), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S109
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(31), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(31), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(31), // *, reduce: Varcte
			reduce(31), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S110
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S111
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(22), // ;, reduce: Exp
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(22), // relop, reduce: Exp
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S112
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(109), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(116), // cteI
			shift(117), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S113
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(109), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(116), // cteI
			shift(117), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S114
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(24), // ;, reduce: Termino
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(24), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			shift(203), // *
			shift(204), // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S115
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(30), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(30), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(30), // *, reduce: Factor
			reduce(30), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S116
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(32), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(32), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(32), // *, reduce: Varcte
			reduce(32), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S117
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(33), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(33), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(33), // *, reduce: Varcte
			reduce(33), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S118
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(23), // ;, reduce: Exp
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(23), // relop, reduce: Exp
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S119
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(31), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(31), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(31), // +, reduce: Varcte
			reduce(31), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S120
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S121
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(119), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(125), // cteI
			shift(126), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S122
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(119), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(125), // cteI
			shift(126), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S123
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(25), // ;, reduce: Termino
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(25), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(25), // +, reduce: Termino
			reduce(25), // -, reduce: Termino
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S124
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(30), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(30), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(30), // +, reduce: Factor
			reduce(30), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S125
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(32), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(32), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(32), // +, reduce: Varcte
			reduce(32), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S126
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(33), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(33), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(33), // +, reduce: Varcte
			reduce(33), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S127
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(26), // ;, reduce: Termino
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(26), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(26), // +, reduce: Termino
			reduce(26), // -, reduce: Termino
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S128
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(36), // ), reduce: Expresiones
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S129
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(31), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Varcte
			reduce(31), // +, reduce: Varcte
			reduce(31), // -, reduce: Varcte
			reduce(31), // *, reduce: Varcte
			reduce(31), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S130
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(19), // ,, reduce: Expresion
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(19), // ), reduce: Expresion
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S131
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S132
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(21), // ,, reduce: Exp
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(21), // ), reduce: Exp
			shift(209), // +
			shift(210), // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S133
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(129), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(137), // cteI
			shift(138), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S134
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(129), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(137), // cteI
			shift(138), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S135
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(24), // ,, reduce: Termino
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(24), // ), reduce: Termino
			reduce(24), // +, reduce: Termino
			reduce(24), // -, reduce: Termino
			shift(213), // *
			shift(214), // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S136
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(30), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Factor
			reduce(30), // +, reduce: Factor
			reduce(30), // -, reduce: Factor
			reduce(30), // *, reduce: Factor
			reduce(30), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S137
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(32), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Varcte
			reduce(32), // +, reduce: Varcte
			reduce(32), // -, reduce: Varcte
			reduce(32), // *, reduce: Varcte
			reduce(32), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S138
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(33), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Varcte
			reduce(33), // +, reduce: Varcte
			reduce(33), // -, reduce: Varcte
			reduce(33), // *, reduce: Varcte
			reduce(33), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S139
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(27), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(27), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			reduce(27), // +, reduce: Factor
			reduce(27), // -, reduce: Factor
			reduce(27), // *, reduce: Factor
			reduce(27), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S140
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(20), // id, reduce: Escritura
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			reduce(20), // }, reduce: Escritura
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(20), // print, reduce: Escritura
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(20), // if, reduce: Escritura
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S141
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(31), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(31), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			reduce(31), // *, reduce: Varcte
			reduce(31), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S142
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S143
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(22), // ,, reduce: Exp
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(22), // relop, reduce: Exp
			nil,        // print
			nil,        // (
			reduce(22), // ), reduce: Exp
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S144
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(141), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(148), // cteI
			shift(149), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S145
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(141), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(148), // cteI
			shift(149), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S146
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(24), // ,, reduce: Termino
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(24), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			reduce(24), // ), reduce: Termino
			nil,        // +
			nil,        // -
			shift(218), // *
			shift(219), // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S147
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(30), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(30), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Factor
			nil,        // +
			nil,        // -
			reduce(30), // *, reduce: Factor
			reduce(30), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S148
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(32), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(32), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			reduce(32), // *, reduce: Varcte
			reduce(32), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S149
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(33), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(33), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			reduce(33), // *, reduce: Varcte
			reduce(33), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S150
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(23), // ,, reduce: Exp
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(23), // relop, reduce: Exp
			nil,        // print
			nil,        // (
			reduce(23), // ), reduce: Exp
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S151
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(31), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(31), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Varcte
			reduce(31), // +, reduce: Varcte
			reduce(31), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S152
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S153
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(151), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(157), // cteI
			shift(158), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S154
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(151), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(157), // cteI
			shift(158), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S155
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(25), // ,, reduce: Termino
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(25), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			reduce(25), // ), reduce: Termino
			reduce(25), // +, reduce: Termino
			reduce(25), // -, reduce: Termino
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S156
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(30), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(30), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Factor
			reduce(30), // +, reduce: Factor
			reduce(30), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S157
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(32), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(32), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Varcte
			reduce(32), // +, reduce: Varcte
			reduce(32), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S158
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(33), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(33), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Varcte
			reduce(33), // +, reduce: Varcte
			reduce(33), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S159
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(26), // ,, reduce: Termino
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(26), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			reduce(26), // ), reduce: Termino
			reduce(26), // +, reduce: Termino
			reduce(26), // -, reduce: Termino
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S160
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(37), // ), reduce: Expresiones
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S161
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			shift(223), // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			shift(224), // else
			nil,        // cteS
		},
	},
	actionRow{ // S162
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(13),  // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			reduce(13), // }, reduce: Estatutos
			nil,        // empty
			nil,        // =
			nil,        // relop
			shift(19),  // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			shift(20),  // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S163
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Varcte
			reduce(31), // +, reduce: Varcte
			reduce(31), // -, reduce: Varcte
			reduce(31), // *, reduce: Varcte
			reduce(31), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S164
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(19), // ), reduce: Expresion
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S165
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S166
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(21), // ), reduce: Exp
			shift(227), // +
			shift(228), // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S167
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(163), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(171), // cteI
			shift(172), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S168
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(163), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(171), // cteI
			shift(172), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S169
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(24), // ), reduce: Termino
			reduce(24), // +, reduce: Termino
			reduce(24), // -, reduce: Termino
			shift(231), // *
			shift(232), // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S170
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Factor
			reduce(30), // +, reduce: Factor
			reduce(30), // -, reduce: Factor
			reduce(30), // *, reduce: Factor
			reduce(30), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S171
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Varcte
			reduce(32), // +, reduce: Varcte
			reduce(32), // -, reduce: Varcte
			reduce(32), // *, reduce: Varcte
			reduce(32), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S172
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Varcte
			reduce(33), // +, reduce: Varcte
			reduce(33), // -, reduce: Varcte
			reduce(33), // *, reduce: Varcte
			reduce(33), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S173
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(27), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			reduce(27), // +, reduce: Factor
			reduce(27), // -, reduce: Factor
			reduce(27), // *, reduce: Factor
			reduce(27), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S174
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(31), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			reduce(31), // *, reduce: Varcte
			reduce(31), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S175
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S176
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(22), // relop, reduce: Exp
			nil,        // print
			nil,        // (
			reduce(22), // ), reduce: Exp
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S177
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(174), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(181), // cteI
			shift(182), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S178
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(174), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(181), // cteI
			shift(182), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S179
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(24), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			reduce(24), // ), reduce: Termino
			nil,        // +
			nil,        // -
			shift(236), // *
			shift(237), // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S180
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(30), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Factor
			nil,        // +
			nil,        // -
			reduce(30), // *, reduce: Factor
			reduce(30), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S181
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(32), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			reduce(32), // *, reduce: Varcte
			reduce(32), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S182
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(33), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			reduce(33), // *, reduce: Varcte
			reduce(33), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S183
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(23), // relop, reduce: Exp
			nil,        // print
			nil,        // (
			reduce(23), // ), reduce: Exp
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S184
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(31), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Varcte
			reduce(31), // +, reduce: Varcte
			reduce(31), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S185
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S186
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(184), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(190), // cteI
			shift(191), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S187
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(184), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(190), // cteI
			shift(191), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S188
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(25), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			reduce(25), // ), reduce: Termino
			reduce(25), // +, reduce: Termino
			reduce(25), // -, reduce: Termino
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S189
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(30), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Factor
			reduce(30), // +, reduce: Factor
			reduce(30), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S190
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(32), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Varcte
			reduce(32), // +, reduce: Varcte
			reduce(32), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S191
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(33), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Varcte
			reduce(33), // +, reduce: Varcte
			reduce(33), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S192
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(26), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			reduce(26), // ), reduce: Termino
			reduce(26), // +, reduce: Termino
			reduce(26), // -, reduce: Termino
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S193
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(241), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S194
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(242), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(243), // (
			nil,        // )
			shift(245), // +
			shift(246), // -
			nil,        // *
			nil,        // /
			shift(249), // cteI
			shift(250), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S195
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(242), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(243), // (
			nil,        // )
			shift(245), // +
			shift(246), // -
			nil,        // *
			nil,        // /
			shift(249), // cteI
			shift(250), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S196
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(29), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(29), // +, reduce: Factor
			reduce(29), // -, reduce: Factor
			reduce(29), // *, reduce: Factor
			reduce(29), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S197
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(28), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(28), // +, reduce: Factor
			reduce(28), // -, reduce: Factor
			reduce(28), // *, reduce: Factor
			reduce(28), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S198
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(252), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(253), // (
			nil,        // )
			shift(254), // +
			shift(255), // -
			nil,        // *
			nil,        // /
			shift(258), // cteI
			shift(259), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S199
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(252), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(253), // (
			nil,        // )
			shift(254), // +
			shift(255), // -
			nil,        // *
			nil,        // /
			shift(258), // cteI
			shift(259), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S200
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(261), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S201
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(29), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(29), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(29), // *, reduce: Factor
			reduce(29), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S202
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(28), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(28), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(28), // *, reduce: Factor
			reduce(28), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S203
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(262), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(263), // (
			nil,        // )
			shift(264), // +
			shift(265), // -
			nil,        // *
			nil,        // /
			shift(268), // cteI
			shift(269), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S204
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(262), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(263), // (
			nil,        // )
			shift(264), // +
			shift(265), // -
			nil,        // *
			nil,        // /
			shift(268), // cteI
			shift(269), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S205
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(271), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S206
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(29), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(29), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(29), // +, reduce: Factor
			reduce(29), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S207
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(28), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(28), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(28), // +, reduce: Factor
			reduce(28), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S208
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(272), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S209
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(273), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(274), // (
			nil,        // )
			shift(276), // +
			shift(277), // -
			nil,        // *
			nil,        // /
			shift(280), // cteI
			shift(281), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S210
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(273), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(274), // (
			nil,        // )
			shift(276), // +
			shift(277), // -
			nil,        // *
			nil,        // /
			shift(280), // cteI
			shift(281), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S211
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(29), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Factor
			reduce(29), // +, reduce: Factor
			reduce(29), // -, reduce: Factor
			reduce(29), // *, reduce: Factor
			reduce(29), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S212
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(28), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Factor
			reduce(28), // +, reduce: Factor
			reduce(28), // -, reduce: Factor
			reduce(28), // *, reduce: Factor
			reduce(28), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S213
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(283), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(284), // (
			nil,        // )
			shift(285), // +
			shift(286), // -
			nil,        // *
			nil,        // /
			shift(289), // cteI
			shift(290), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S214
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(283), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(284), // (
			nil,        // )
			shift(285), // +
			shift(286), // -
			nil,        // *
			nil,        // /
			shift(289), // cteI
			shift(290), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S215
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(292), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S216
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(29), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(29), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Factor
			nil,        // +
			nil,        // -
			reduce(29), // *, reduce: Factor
			reduce(29), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S217
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(28), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(28), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Factor
			nil,        // +
			nil,        // -
			reduce(28), // *, reduce: Factor
			reduce(28), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S218
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(293), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(294), // (
			nil,        // )
			shift(295), // +
			shift(296), // -
			nil,        // *
			nil,        // /
			shift(299), // cteI
			shift(300), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S219
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(293), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(294), // (
			nil,        // )
			shift(295), // +
			shift(296), // -
			nil,        // *
			nil,        // /
			shift(299), // cteI
			shift(300), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S220
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(302), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S221
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(29), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(29), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Factor
			reduce(29), // +, reduce: Factor
			reduce(29), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S222
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(28), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(28), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Factor
			reduce(28), // +, reduce: Factor
			reduce(28), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S223
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(34), // id, reduce: Condicion
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			reduce(34), // }, reduce: Condicion
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(34), // print, reduce: Condicion
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(34), // if, reduce: Condicion
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S224
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			shift(304), // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S225
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			shift(305), // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S226
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(306), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S227
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(307), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(308), // (
			nil,        // )
			shift(310), // +
			shift(311), // -
			nil,        // *
			nil,        // /
			shift(314), // cteI
			shift(315), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S228
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(307), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(308), // (
			nil,        // )
			shift(310), // +
			shift(311), // -
			nil,        // *
			nil,        // /
			shift(314), // cteI
			shift(315), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S229
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Factor
			reduce(29), // +, reduce: Factor
			reduce(29), // -, reduce: Factor
			reduce(29), // *, reduce: Factor
			reduce(29), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S230
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Factor
			reduce(28), // +, reduce: Factor
			reduce(28), // -, reduce: Factor
			reduce(28), // *, reduce: Factor
			reduce(28), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S231
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(317), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(318), // (
			nil,        // )
			shift(319), // +
			shift(320), // -
			nil,        // *
			nil,        // /
			shift(323), // cteI
			shift(324), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S232
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(317), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(318), // (
			nil,        // )
			shift(319), // +
			shift(320), // -
			nil,        // *
			nil,        // /
			shift(323), // cteI
			shift(324), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S233
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(326), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S234
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(29), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Factor
			nil,        // +
			nil,        // -
			reduce(29), // *, reduce: Factor
			reduce(29), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S235
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(28), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Factor
			nil,        // +
			nil,        // -
			reduce(28), // *, reduce: Factor
			reduce(28), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S236
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(327), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(328), // (
			nil,        // )
			shift(329), // +
			shift(330), // -
			nil,        // *
			nil,        // /
			shift(333), // cteI
			shift(334), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S237
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(327), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(328), // (
			nil,        // )
			shift(329), // +
			shift(330), // -
			nil,        // *
			nil,        // /
			shift(333), // cteI
			shift(334), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S238
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(336), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S239
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(29), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Factor
			reduce(29), // +, reduce: Factor
			reduce(29), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S240
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(28), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Factor
			reduce(28), // +, reduce: Factor
			reduce(28), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S241
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(27), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(27), // +, reduce: Factor
			reduce(27), // -, reduce: Factor
			reduce(27), // *, reduce: Factor
			reduce(27), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S242
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(31), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(31), // *, reduce: Varcte
			reduce(31), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S243
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S244
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(22), // ;, reduce: Exp
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S245
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(242), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(249), // cteI
			shift(250), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S246
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(242), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(249), // cteI
			shift(250), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S247
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(24), // ;, reduce: Termino
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			shift(340), // *
			shift(341), // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S248
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(30), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(30), // *, reduce: Factor
			reduce(30), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S249
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(32), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(32), // *, reduce: Varcte
			reduce(32), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S250
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(33), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(33), // *, reduce: Varcte
			reduce(33), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S251
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(23), // ;, reduce: Exp
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S252
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(31), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(31), // +, reduce: Varcte
			reduce(31), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S253
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S254
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(252), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(258), // cteI
			shift(259), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S255
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(252), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(258), // cteI
			shift(259), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S256
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(25), // ;, reduce: Termino
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(25), // +, reduce: Termino
			reduce(25), // -, reduce: Termino
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S257
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(30), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(30), // +, reduce: Factor
			reduce(30), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S258
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(32), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(32), // +, reduce: Varcte
			reduce(32), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S259
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(33), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(33), // +, reduce: Varcte
			reduce(33), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S260
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(26), // ;, reduce: Termino
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(26), // +, reduce: Termino
			reduce(26), // -, reduce: Termino
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S261
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(27), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(27), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(27), // *, reduce: Factor
			reduce(27), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S262
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(31), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(31), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S263
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S264
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(262), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(268), // cteI
			shift(269), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S265
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(262), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(268), // cteI
			shift(269), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S266
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(25), // ;, reduce: Termino
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(25), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S267
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(30), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(30), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S268
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(32), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(32), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S269
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(33), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(33), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S270
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(26), // ;, reduce: Termino
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(26), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S271
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(27), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(27), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(27), // +, reduce: Factor
			reduce(27), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S272
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(27), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			reduce(27), // +, reduce: Factor
			reduce(27), // -, reduce: Factor
			reduce(27), // *, reduce: Factor
			reduce(27), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S273
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(31), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			reduce(31), // *, reduce: Varcte
			reduce(31), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S274
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S275
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(22), // ,, reduce: Exp
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(22), // ), reduce: Exp
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S276
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(273), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(280), // cteI
			shift(281), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S277
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(273), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(280), // cteI
			shift(281), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S278
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(24), // ,, reduce: Termino
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(24), // ), reduce: Termino
			nil,        // +
			nil,        // -
			shift(351), // *
			shift(352), // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S279
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(30), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Factor
			nil,        // +
			nil,        // -
			reduce(30), // *, reduce: Factor
			reduce(30), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S280
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(32), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			reduce(32), // *, reduce: Varcte
			reduce(32), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S281
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(33), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			reduce(33), // *, reduce: Varcte
			reduce(33), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S282
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(23), // ,, reduce: Exp
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(23), // ), reduce: Exp
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S283
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(31), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Varcte
			reduce(31), // +, reduce: Varcte
			reduce(31), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S284
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S285
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(283), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(289), // cteI
			shift(290), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S286
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(283), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(289), // cteI
			shift(290), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S287
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(25), // ,, reduce: Termino
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(25), // ), reduce: Termino
			reduce(25), // +, reduce: Termino
			reduce(25), // -, reduce: Termino
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S288
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(30), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Factor
			reduce(30), // +, reduce: Factor
			reduce(30), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S289
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(32), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Varcte
			reduce(32), // +, reduce: Varcte
			reduce(32), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S290
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(33), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Varcte
			reduce(33), // +, reduce: Varcte
			reduce(33), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S291
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(26), // ,, reduce: Termino
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(26), // ), reduce: Termino
			reduce(26), // +, reduce: Termino
			reduce(26), // -, reduce: Termino
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S292
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(27), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(27), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			nil,        // +
			nil,        // -
			reduce(27), // *, reduce: Factor
			reduce(27), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S293
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(31), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(31), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S294
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S295
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(293), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(299), // cteI
			shift(300), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S296
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(293), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(299), // cteI
			shift(300), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S297
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(25), // ,, reduce: Termino
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(25), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			reduce(25), // ), reduce: Termino
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S298
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(30), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(30), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S299
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(32), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(32), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S300
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(33), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(33), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S301
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(26), // ,, reduce: Termino
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(26), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			reduce(26), // ), reduce: Termino
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S302
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(27), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(27), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			reduce(27), // +, reduce: Factor
			reduce(27), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S303
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			shift(359), // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S304
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(13),  // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			reduce(13), // }, reduce: Estatutos
			nil,        // empty
			nil,        // =
			nil,        // relop
			shift(19),  // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			shift(20),  // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S305
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(10), // ;, reduce: Bloque
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			reduce(10), // else, reduce: Bloque
			nil,        // cteS
		},
	},
	actionRow{ // S306
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			reduce(27), // +, reduce: Factor
			reduce(27), // -, reduce: Factor
			reduce(27), // *, reduce: Factor
			reduce(27), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S307
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			reduce(31), // *, reduce: Varcte
			reduce(31), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S308
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S309
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(22), // ), reduce: Exp
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S310
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(307), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(314), // cteI
			shift(315), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S311
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(307), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(314), // cteI
			shift(315), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S312
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(24), // ), reduce: Termino
			nil,        // +
			nil,        // -
			shift(364), // *
			shift(365), // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S313
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Factor
			nil,        // +
			nil,        // -
			reduce(30), // *, reduce: Factor
			reduce(30), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S314
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			reduce(32), // *, reduce: Varcte
			reduce(32), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S315
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			reduce(33), // *, reduce: Varcte
			reduce(33), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S316
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(23), // ), reduce: Exp
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S317
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Varcte
			reduce(31), // +, reduce: Varcte
			reduce(31), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S318
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S319
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(317), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(323), // cteI
			shift(324), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S320
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(317), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(323), // cteI
			shift(324), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S321
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(25), // ), reduce: Termino
			reduce(25), // +, reduce: Termino
			reduce(25), // -, reduce: Termino
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S322
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Factor
			reduce(30), // +, reduce: Factor
			reduce(30), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S323
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Varcte
			reduce(32), // +, reduce: Varcte
			reduce(32), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S324
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Varcte
			reduce(33), // +, reduce: Varcte
			reduce(33), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S325
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(26), // ), reduce: Termino
			reduce(26), // +, reduce: Termino
			reduce(26), // -, reduce: Termino
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S326
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(27), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			nil,        // +
			nil,        // -
			reduce(27), // *, reduce: Factor
			reduce(27), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S327
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(31), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S328
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S329
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(327), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(333), // cteI
			shift(334), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S330
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(327), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(333), // cteI
			shift(334), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S331
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(25), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			reduce(25), // ), reduce: Termino
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S332
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(30), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S333
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(32), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S334
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(33), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S335
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(26), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			reduce(26), // ), reduce: Termino
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S336
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(27), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			reduce(27), // +, reduce: Factor
			reduce(27), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S337
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(372), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S338
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(29), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(29), // *, reduce: Factor
			reduce(29), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S339
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(28), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(28), // *, reduce: Factor
			reduce(28), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S340
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(373), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(374), // (
			nil,        // )
			shift(375), // +
			shift(376), // -
			nil,        // *
			nil,        // /
			shift(379), // cteI
			shift(380), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S341
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(373), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(374), // (
			nil,        // )
			shift(375), // +
			shift(376), // -
			nil,        // *
			nil,        // /
			shift(379), // cteI
			shift(380), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S342
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(382), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S343
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(29), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(29), // +, reduce: Factor
			reduce(29), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S344
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(28), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(28), // +, reduce: Factor
			reduce(28), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S345
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(383), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S346
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(29), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(29), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S347
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(28), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(28), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S348
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(384), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S349
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(29), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Factor
			nil,        // +
			nil,        // -
			reduce(29), // *, reduce: Factor
			reduce(29), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S350
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(28), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Factor
			nil,        // +
			nil,        // -
			reduce(28), // *, reduce: Factor
			reduce(28), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S351
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(385), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(386), // (
			nil,        // )
			shift(387), // +
			shift(388), // -
			nil,        // *
			nil,        // /
			shift(391), // cteI
			shift(392), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S352
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(385), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(386), // (
			nil,        // )
			shift(387), // +
			shift(388), // -
			nil,        // *
			nil,        // /
			shift(391), // cteI
			shift(392), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S353
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(394), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S354
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(29), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Factor
			reduce(29), // +, reduce: Factor
			reduce(29), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S355
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(28), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Factor
			reduce(28), // +, reduce: Factor
			reduce(28), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S356
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(395), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S357
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(29), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(29), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S358
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(28), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(28), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S359
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(35), // id, reduce: Condicion
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			reduce(35), // }, reduce: Condicion
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(35), // print, reduce: Condicion
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(35), // if, reduce: Condicion
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S360
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			shift(396), // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S361
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(397), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S362
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Factor
			nil,        // +
			nil,        // -
			reduce(29), // *, reduce: Factor
			reduce(29), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S363
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Factor
			nil,        // +
			nil,        // -
			reduce(28), // *, reduce: Factor
			reduce(28), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S364
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(398), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(399), // (
			nil,        // )
			shift(400), // +
			shift(401), // -
			nil,        // *
			nil,        // /
			shift(404), // cteI
			shift(405), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S365
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(398), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(399), // (
			nil,        // )
			shift(400), // +
			shift(401), // -
			nil,        // *
			nil,        // /
			shift(404), // cteI
			shift(405), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S366
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(407), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S367
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Factor
			reduce(29), // +, reduce: Factor
			reduce(29), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S368
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Factor
			reduce(28), // +, reduce: Factor
			reduce(28), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S369
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(408), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S370
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(29), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S371
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(28), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S372
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(27), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(27), // *, reduce: Factor
			reduce(27), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S373
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(31), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S374
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S375
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(373), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(379), // cteI
			shift(380), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S376
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(373), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(379), // cteI
			shift(380), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S377
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(25), // ;, reduce: Termino
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S378
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(30), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S379
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(32), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S380
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(33), // ;, reduce: Varcte
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S381
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(26), // ;, reduce: Termino
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S382
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(27), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(27), // +, reduce: Factor
			reduce(27), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S383
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(27), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(27), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S384
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(27), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			nil,        // +
			nil,        // -
			reduce(27), // *, reduce: Factor
			reduce(27), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S385
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(31), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S386
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S387
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(385), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(391), // cteI
			shift(392), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S388
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(385), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(391), // cteI
			shift(392), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S389
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(25), // ,, reduce: Termino
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(25), // ), reduce: Termino
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S390
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(30), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S391
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(32), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S392
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(33), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S393
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(26), // ,, reduce: Termino
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(26), // ), reduce: Termino
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S394
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(27), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			reduce(27), // +, reduce: Factor
			reduce(27), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S395
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(27), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(27), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S396
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(10), // ;, reduce: Bloque
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S397
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			nil,        // +
			nil,        // -
			reduce(27), // *, reduce: Factor
			reduce(27), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S398
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S399
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // intTyp
			nil,       // floatTyp
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(59), // (
			nil,       // )
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			shift(65), // cteI
			shift(66), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S400
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(398), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(404), // cteI
			shift(405), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S401
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(398), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(404), // cteI
			shift(405), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S402
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(25), // ), reduce: Termino
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S403
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S404
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S405
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S406
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(26), // ), reduce: Termino
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S407
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			reduce(27), // +, reduce: Factor
			reduce(27), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S408
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(27), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S409
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(418), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S410
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(29), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S411
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(28), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S412
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(419), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S413
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(29), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S414
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(28), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S415
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(420), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S416
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S417
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S418
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(27), // ;, reduce: Factor
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S419
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			reduce(27), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S420
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // intTyp
			nil,        // floatTyp
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
}
